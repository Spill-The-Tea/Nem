diff a/Nelson/position.cpp b/Nelson/position.cpp	(rejected hunks)
@@ -374,10 +374,13 @@
 			Piece p = Board[from(moves[i].move)];
 			moves[i].score = history->getValue(p, toSquare);
 		}
-		else {
-			moves[i].score = CAPTURE_SCORES[GetPieceType(Board[from(moves[i].move)])][GetPieceType(Board[to(moves[i].move)])] + 20 * (type(moves[i].move) == PROMOTION);
+		else if (i > startIndex) {
+			//moves[i].score = CAPTURE_SCORES[GetPieceType(Board[from(moves[i].move)])][GetPieceType(Board[to(moves[i].move)])] + 20 * (type(moves[i].move) == PROMOTION);
+			if (i == startIndex + 1) moves[startIndex].score = SEE(from(moves[startIndex].move), to(from(moves[startIndex].move))) + int(type(moves[startIndex].move) == PROMOTION) * (PieceValuesMG[QUEEN] - PieceValuesMG[PAWN]);
+			moves[i].score = SEE(from(moves[i].move), to(from(moves[i].move))) + int(type(moves[i].move) == PROMOTION) * (PieceValuesMG[QUEEN] - PieceValuesMG[PAWN]);
 			quietsIndex++;
 		}
+		else quietsIndex++;
 	}
 	if (quietsIndex > startIndex + 1) std::sort(moves + startIndex, moves + quietsIndex - 1, sortByScore);
 	if (movepointer-2 > quietsIndex) std::sort(moves + quietsIndex, &moves[movepointer - 1], sortByScore);
